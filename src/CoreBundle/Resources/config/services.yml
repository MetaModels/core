parameters:
  metamodels.managed-schema-type-names: []
services:
    _defaults:
      bind:
        $translator: '@cca.translator.contao_translator'

    MetaModels\IFactory: '@metamodels.factory'
    MetaModels\Filter\Setting\IFilterSettingFactory: '@metamodels.filter_setting_factory'
    MetaModels\Render\Setting\IRenderSettingFactory: '@metamodels.render_setting_factory'
    MetaModels\ViewCombination\ViewCombination: '@metamodels.view_combination'

    metamodels.assets.icon_builder:
        class: MetaModels\CoreBundle\Assets\IconBuilder
        arguments:
            - "@=service('contao.framework').getAdapter('Contao\\\\FilesModel')"
            - "@contao.image.image_factory"
            - "%kernel.project_dir%"
            - "%metamodels.assets_dir%"
            - "%metamodels.assets_web%"
            - "@=service('contao.framework').getAdapter('Contao\\\\Image')"
            - "%contao.web_dir%"

    metamodels.cache:
        class: Doctrine\Common\Cache\Psr6\DoctrineProvider
        factory: ['Doctrine\Common\Cache\Psr6\DoctrineProvider', 'wrap']
        arguments:
            - "@metamodels.cache_internal"
        public: true

    metamodels.cache_internal:
        class: Symfony\Component\Cache\Adapter\FilesystemAdapter
        arguments:
            $namespace: ''
            $defaultLifetime: 0
            $directory: "%metamodels.cache_dir%"
        public: true

    metamodels.cache.purger:
        class: MetaModels\BackendIntegration\PurgeCache
        arguments:
            - "%metamodels.cache_dir%"
            - "@logger"
        public: true

    metamodels.factory:
        arguments:
            - "@event_dispatcher"
        class: MetaModels\Factory
        public: true

    metamodels.attribute_factory:
        class: MetaModels\Attribute\AttributeFactory
        arguments:
          - "@event_dispatcher"
        public: true

    metamodels.filter_setting_factory:
        class: MetaModels\Filter\Setting\FilterSettingFactory
        arguments:
          - "@database_connection"
          - "@event_dispatcher"
          - "@metamodels.factory"
        public: true

    metamodels.render_setting_factory:
        class: MetaModels\Render\Setting\RenderSettingFactory
        arguments:
          - "@database_connection"
          - "@event_dispatcher"
          - "@metamodels.filter_setting_factory"
          - '@MetaModels\Filter\FilterUrlBuilder'
        public: true

    metamodels.template_list:
        class: MetaModels\BackendIntegration\TemplateList
        arguments:
          - "@database_connection"
          - "%contao.resources_paths%"
          - "%kernel.project_dir%"
          - "@translator"

    metamodels.contao_input:
        class: Contao\Input
        factory: ['@MetaModels\CoreBundle\Contao\Compat\ContaoFactory', 'getAdapter']
        arguments:
            - 'Contao\Input'

    metamodels.contao_session:
        class: Contao\Session
        factory: ['@MetaModels\CoreBundle\Contao\Compat\ContaoFactory', 'createInstance']
        arguments:
            - 'Contao\Session'

    metamodels.insert_tags:
        class: Contao\InsertTags
        factory: ['@MetaModels\CoreBundle\Contao\Compat\ContaoFactory', 'createInsertTags']

    metamodels.table_manipulator:
        class: MetaModels\Helper\TableManipulator
        arguments:
          - "@database_connection"
          - "%metamodels.system_columns%"
        public: true

    metamodels.backend.url-builder-factory:
        class: ContaoCommunityAlliance\UrlBuilder\Contao\CsrfUrlBuilderFactory
        arguments:
            - '@security.csrf.token_manager'
            - '%contao.csrf_token_name%'

    MetaModels\Filter\FilterUrlBuilder:
        arguments:
            - '@contao.routing.page_url_generator'
            - '@request_stack'
            - '%contao.prepend_locale%'
            - '%contao.url_suffix%'
            - "@=service('contao.framework').getAdapter('Contao\\\\PageModel')"
            - '%contao.legacy_routing%'

    # Please inject the service "MetaModels\Filter\FilterUrlBuilder" directly.
    metamodels.filter_url:
        alias: 'MetaModels\Filter\FilterUrlBuilder'
        public: true

    MetaModels\FrontendIntegration\FrontendFilter:
        arguments:
            - '@database_connection'
            - '@MetaModels\Filter\FilterUrlBuilder'
            - '@translator'
        public: true

    metamodels.controller.abstract.add_all:
        abstract: true
        arguments:
            - "@twig"
            - "@contao.translation.translator"
            - "@metamodels.factory"
            - "@database_connection"
            - "@=service('contao.framework').getAdapter('Contao\\\\System')"
            - '@metamodels.cache.purger'
    metamodels.controller.inputscreen.add_all:
        class: MetaModels\CoreBundle\Controller\Backend\InputScreenAddAllController
        parent: metamodels.controller.abstract.add_all
        tags: ['controller.service_arguments']
    metamodels.controller.rendersetting.add_all:
        class: MetaModels\CoreBundle\Controller\Backend\RenderSettingAddAllController
        parent: metamodels.controller.abstract.add_all
        tags: ['controller.service_arguments']

    MetaModels\CoreBundle\Controller\Backend\ConfigurationController:
      tags: ['controller.service_arguments']

    MetaModels\CoreBundle\Controller\Backend\MetaModelController:
      arguments:
        - '@contao.menu.backend_builder'
      tags: ['controller.service_arguments']

    metamodels.controller.support_screen:
        class: MetaModels\CoreBundle\Controller\Backend\SupportMetaModelsController
        arguments:
            - "@twig"
            - "@contao.translation.translator"
            - "%metamodels.resource_dir%/data/contributors-github.json"
            - "%metamodels.resource_dir%/data/contributors-transifex.json"
        tags: ['controller.service_arguments']

    metamodels.view_combination.builder:
        class: MetaModels\ViewCombination\ViewCombinationBuilder
        arguments:
            - "@database_connection"
            - "@metamodels.factory"

    metamodels.view_combination.input_screen_information_builder:
        class: MetaModels\ViewCombination\InputScreenInformationBuilder
        arguments:
            - "@database_connection"
            - "@metamodels.factory"

    metamodels.view_combination:
        class: MetaModels\ViewCombination\ViewCombination
        arguments:
            - "@metamodels.cache"
            - "@security.token_storage"
            - "@metamodels.view_combination.builder"
            - "@metamodels.view_combination.input_screen_information_builder"

    MetaModels\MetaModelsServiceContainer:
        deprecated: 'The service "%service_id%" is deprecated and to be removed in MetaModels 3 - inject needed services directly.'
        configurator: ['@MetaModels\CoreBundle\LegacyCompat\ServiceContainerInitializer', 'configure']
        public: true

    MetaModels\CoreBundle\LegacyCompat\ServiceContainerInitializer:
        arguments:
            - '@service_container'

    MetaModels\CoreBundle\Contao\Compat\ContaoFactory:
        class: MetaModels\CoreBundle\Contao\Compat\ContaoFactory
        arguments:
            - '@contao.framework'

    MetaModels\InformationProvider\ContaoDatabaseBackedInformationProvider:
        arguments:
            - '@database_connection'

    MetaModels\InformationProvider\MetaModelInformationCollector:
        arguments:
            - ['@MetaModels\InformationProvider\ContaoDatabaseBackedInformationProvider']

    MetaModels\Schema\SchemaGenerator:
        arguments:
          - []
        public: true

    MetaModels\Schema\SchemaManager:
        arguments:
          - []
        public: true

    MetaModels\Schema\LegacySchemaGenerator:
        arguments:
            - '@metamodels.factory'
            - '%metamodels.managed-schema-type-names%'
        tags:
            - { name: 'metamodels.schema-generator' }

    MetaModels\Schema\LegacySchemaManager:
        tags:
            - { name: 'metamodels.schema-manager', priority: -100 }

    MetaModels\Schema\Doctrine\DoctrineSchemaGenerator:
        arguments:
          - []
        tags:
            - { name: 'metamodels.schema-generator' }

    MetaModels\Schema\Doctrine\DoctrineSchemaManager:
        arguments:
          - '@MetaModels\Schema\Doctrine\DoctrineSchemaManipulator'
        tags:
            - { name: 'metamodels.schema-manager' }

    MetaModels\Schema\Doctrine\DoctrineSchemaManipulator:
        arguments:
          - '@database_connection'
        tags:
            - { name: 'metamodels.schema-manipulator' }

    MetaModels\CoreBundle\Command\SchemaValidatorCommand:
        arguments:
            - '@MetaModels\InformationProvider\MetaModelInformationCollector'
            - '@MetaModels\Schema\SchemaGenerator'
            - '@MetaModels\Schema\SchemaManager'
        tags:
            - { name: 'console.command' }

    MetaModels\Schema\Doctrine\SystemColumnSchemaGenerator:
        tags:
            - { name: 'metamodels.schema-generator.doctrine' }

    MetaModels\CoreBundle\Migration\TableCollationMigration:
        arguments:
            $connection: '@database_connection'
            # The default table options comes from the doctrine extension.
            $defaultTableOptions: ~
        tags:
            - name: contao.migration

    MetaModels\CoreBundle\Migration\FindXhtmlTemplateMigration:
        arguments:
            - '%kernel.project_dir%'
        tags:
            - name: contao.migration

    MetaModels\CoreBundle\Migration\FindClearAllTemplateMigration:
        arguments:
            - '%kernel.project_dir%'
        tags:
            - name: contao.migration

    MetaModels\CoreBundle\Migration\SetDefaultZeroMigration:
      arguments:
        $connection: '@database_connection'
      tags:
        - name: contao.migration

    MetaModels\CoreBundle\Formatter\SelectAttributeOptionLabelFormatter:
        public: false

    MetaModels\CoreBundle\Sorter\AttributeSorter:
      public: false

    MetaModels\Helper\ToolboxFile:
        public: false
        arguments:
            - "@contao.image.image_factory"
            - "%kernel.project_dir%"
            - "@contao.assets.files_context"
            - "@contao.image.picture_factory"
            - "@session"

    MetaModels\CoreBundle\Translator\MetaModelTranslatorConfigurator:
      arguments:
        $factory: '@metamodels.factory'
        $cache: '@metamodels.cache_internal'

    MetaModels\CoreBundle\Translator\Translator:
      decorates: 'contao.translation.translator'
      arguments:
        - '@MetaModels\CoreBundle\Translator\Translator.inner'

    MetaModels\CoreBundle\Translator\MetaModelTranslationLoader:
      arguments:
        $baseTranslator: '@contao.translation.translator'
        $factory: '@metamodels.factory'
        $viewCombination: '@metamodels.view_combination'
        $builder: '@metamodels.view_combination.input_screen_information_builder'
      tags: [ { name: translation.loader, alias: 'metamodels' } ]
