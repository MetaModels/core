services:
    metamodels.filter_setting_factory.idlist:
        class: MetaModels\Filter\Setting\StaticIdListFilterSettingTypeFactory
        tags:
          - { name: metamodels.filter_factory }

    metamodels.filter_setting_factory.simplelookup:
        class: MetaModels\Filter\Setting\SimpleLookupFilterSettingTypeFactory
        arguments:
          - '@event_dispatcher'
          - '@MetaModels\Filter\FilterUrlBuilder'
        tags:
          - { name: metamodels.filter_factory }

    metamodels.filter_setting_factory.customsql:
        class: MetaModels\Filter\Setting\CustomSqlFilterSettingTypeFactory
        arguments:
          - '@metamodels.filter_setting_factory.customsql.locator'
        tags:
          - { name: metamodels.filter_factory }

    metamodels.filter_setting_factory.customsql.locator:
        class: Symfony\Component\DependencyInjection\ServiceLocator
        arguments:
          -
            Doctrine\DBAL\Connection: '@database_connection'
            MetaModels\IMetaModelsServiceContainer: '@MetaModels\MetaModelsServiceContainer'
            Contao\InsertTags: '@metamodels.insert_tags'
            MetaModels\CoreBundle\Contao\InsertTag\ReplaceTableName: '@MetaModels\CoreBundle\Contao\InsertTag\ReplaceTableName'
            MetaModels\CoreBundle\Contao\InsertTag\ReplaceParam: '@MetaModels\CoreBundle\Contao\InsertTag\ReplaceParam'
            MetaModels\CoreBundle\Contao\InsertTag\ResolveLanguageTag: '@MetaModels\CoreBundle\Contao\InsertTag\ResolveLanguageTag'
        tags:
          - { name: container.service_locator }

    metamodels.filter_setting_factory.conditionand:
        class: MetaModels\Filter\Setting\ConditionAndFilterSettingTypeFactory
        tags:
          - { name: metamodels.filter_factory }

    metamodels.filter_setting_factory.conditionor:
        class: MetaModels\Filter\Setting\ConditionOrFilterSettingTypeFactory
        tags:
          - { name: metamodels.filter_factory }
